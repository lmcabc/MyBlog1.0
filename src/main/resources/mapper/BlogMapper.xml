<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lmc.dao.BlogMapper">
    
    <resultMap id="blog" type="com.lmc.vo.QueryBlog">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="recommend" property="recommend"/>
        <result column="type_id" property="typeId"/>
        <result column="update_time" property="updateTime"/>
        <association property="type" javaType="com.lmc.pojo.Type">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>

    <select id="getAllQueryBlog" resultMap="blog">
        select b.id, b.title, b.recommend, b.update_time, t.id, t.name
        from lmcblog.t_blog b
            left outer join lmcblog.t_type t on b.type_id = t.id
        order by b.update_time desc
    </select>

    <insert id="addBlog" parameterType="com.lmc.pojo.Blog">
        insert into lmcblog.t_blog (id,title, content, first_picture, flag,
                                    views, appreciation, share_statement, commentabled,published,
                                    recommend, create_time, update_time, type_id,tag_ids, user_id, description)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{appreciation},
                #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
                #{updateTime},#{typeId},#{tagIds},#{userId},#{description});
    </insert>

    <insert id="saveBlogAndTag" parameterType="com.lmc.vo.BlogAndTag">
        insert into lmcblog.t_blog_tags (tag_id, blog_id) values(#{tagId}, #{blogId})
    </insert>

    <delete id="deleteBlogById">
        delete from lmcblog.t_blog where id=#{id}
    </delete>

    <delete id="deleteBlogAndTypeById">
        delete from lmcblog.t_blog_tags where blog_id = #{id}
    </delete>

    <select id="searchByTitleOrTypeOrRecommend" parameterType="com.lmc.vo.SearchBlog" resultMap="blog">
        <bind name="pattern" value="'%' + title + '%'"/>
        select b.id, b.title, b.update_time, b.recommend, b.type_id, t.id, t.name from lmcblog.t_blog b ,lmcblog.t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="recommend2 != null">
                and b.recommend = #{recommend2}
            </if>
            <if test="title != null">
                and b.title like #{pattern}
            </if>
        </where>
    </select>

    <select id="getShowBlogById" resultType="com.lmc.vo.ShowBlog">
        select b.id, b.recommend, b.type_id,b.tag_ids, b.commentabled, b.update_time, b.title, b.appreciation,
        b.first_picture, b.published, b.content, b.flag, b.share_statement, b.description
        from lmcblog.t_blog b where id=#{id}
    </select>

    <update id="updateShowBlog" parameterType="com.lmc.vo.ShowBlog">
        update lmcblog.t_blog set flag=#{flag}, title=#{title}, content=#{content}, type_id=#{typeId},
                                  tag_ids=#{tagIds}, first_picture=#{firstPicture}, description=#{description},
                                  recommend=${recommend}, share_statement=${shareStatement},commentabled=${commentabled},
                                  published=${published}, appreciation=${appreciation},update_time=#{updateTime}
                                where id=#{id}
    </update>

    <resultMap id="firstPageBlog" type="com.lmc.vo.firstPageBlog">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="first_picture" property="firstPicture"/>
        <result column="description" property="description"/>
        <result column="update_time" property="updateTime"/>
        <result column="views" property="views"/>

        <result column="name" property="typeName"/>

        <result column="nickname" property="nickname"/>
        <result column="avatar" property="avatar"/>
    </resultMap>

    <select id="getAllFirstPageBlog" resultMap="firstPageBlog">
        select b.id, b.update_time, b.title, b.views, b.description,b.first_picture,
               t.name, u.nickname,u.avatar
        from lmcblog.t_blog b ,lmcblog.t_type t, lmcblog.t_user u
        where b.type_id=t.id and u.id = b.user_id
        order by b.update_time desc
    </select>

    <select id="getRecommendBlog" resultType="com.lmc.vo.RecommendBlog">
        select id, title, recommend from lmcblog.t_blog where recommend = 1
    </select>

    <select id="getAllBlogByTypeId" resultMap="firstPageBlog">
        select b.id, b.update_time, b.title, b.views, b.description,b.first_picture,
               t.name, u.nickname,u.avatar
        from lmcblog.t_blog b ,lmcblog.t_type t, lmcblog.t_user u
        where b.type_id=t.id and u.id = b.user_id and b.type_id = #{typeId}
        order by b.update_time desc
    </select>

    <select id="getAllBlogByTagId" resultMap="firstPageBlog">
        select b.id, b.update_time, b.title, b.views, b.description,b.first_picture,
               t.name,
               u.nickname,u.avatar
        from lmcblog.t_blog b,lmcblog.t_type t,lmcblog.t_user u ,lmcblog.t_blog_tags tb,lmcblog.t_tag t1
        where b.type_id = t.id and u.id = b.user_id and tb.blog_id = b.id and tb.tag_id = t1.id and t1.id = #{tagId}
        order by b.update_time desc
    </select>

    <resultMap id="detailedBlog" type="com.lmc.vo.DetailedBlog">
        <id property="id" column="bid"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <collection property="tags" ofType="com.lmc.pojo.Tag">
            <id property="id" column="tid"/>
            <result property="name" column="name"/>
        </collection>
    </resultMap>

    <select id="getDetailedBlog" resultMap="detailedBlog">
        select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,
               t.id tid ,t.name
        from lmcblog.t_blog b, lmcblog.t_tag t, lmcblog.t_user u , lmcblog.t_blog_tags tb
        where b.user_id = u.id and tb.blog_id = b.id and tb.tag_id = t.id and  b.id=#{id}
    </select>

    <select id="getSearchBlog" resultMap="firstPageBlog">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id, b.update_time, b.title, b.views, b.description,b.first_picture,
               t.name,
               u.nickname,u.avatar
        from lmcblog.t_blog b ,lmcblog.t_type t, lmcblog.t_user u
        where b.type_id=t.id and u.id = b.user_id and b.title like #{pattern}
        order by b.update_time desc
    </select>
</mapper>